@model IEnumerable<OrderWebApplication.Entity.Models.Product>


@{
    ViewData["Title"] = "Index";
    var obj = ViewBag.Products;
}


<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<link href="~/lib/datatables/css/dataTables.bootstrap4.css" rel="stylesheet" />

<!-- The Modal -->
<div class="modal" id="myModal">
    <div class="modal-dialog card">
        <div class="modal-content card-body">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title"></h4>
                <button type="button" class="close modal-close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body " style="box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px">
                <p id="myModalContent"></p>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger modal-close" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- The Modal -->


<div style="padding-bottom:7vh;">

    @*Start<--Section for selection and display of required products with required quantity-->Start*@

    <div style="">
        <div style="padding:3%;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;border-radius:12px;">
            <h2>Add Details</h2>

            @*Start<--Filter box setup-->Start*@

            <div class="form-group" style="padding-bottom:1%">
                Enter User Mobile Number:
                <label class="sr-only" for="usrnm" style="padding-bottom:0.5%">User Name / Mobile Number:</label>
                <input type="text" class="form-control" id="usrnm" name="usrnm" placeholder="Enter user mobile number" />
            </div>
            <button class="btn btn-primary" style="margin-right:1vw" id="findUser">Find User</button>
            <button class="btn btn-success" id="createUser">Create New User</button>

            <div class="card" style="margin-top:3vh">
                <div class="card-body">

                    <p>Add your item with required quantity</p>
                    <p>In case of duplicate orders, Please reset the page and input the products without duplicates.</p>
                    <div class="form-group" style="margin-top:1.5%;display:block">
                        <label for="product" style="font-weight:bold;padding-bottom:1.5%">Product</label>
                        <select id="productName" asp-items="@(new SelectList(@ViewBag.ProductNames, "ProductName", "ProductName"))" class="selectProductName form-control productType">
                            <option value="default">Please select one</option>
                        </select>
                    </div>
                </div>
            </div>

            @*End<--Filter box setup-->End*@

            <table class="table" id="table_id_products" style="margin-top:2%;margin-bottom:3%">
                <thead>
                    <tr>
                        <th>
                            Product Name
                        </th>
                        <th>
                            Unit
                        </th>
                        <th>
                            Unit Price
                        </th>
                        <th>
                            Avaliable
                        </th>
                        <th>
                            Quantity
                        </th>
                        <th>
                            Total Price
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td id="productNameData">
                            No Data
                        </td>
                        <td id="productUnit">
                            No Data
                        </td>
                        <td id="productPrice">
                            No Data
                        </td>
                        <td id="productAvaliable">
                            No Data
                        </td>
                        <td id="productFinalQuantity">
                            No Data
                        </td>
                        <td id="productTotalPrice">
                            No Data
                        </td>
                        <td id="productAction">
                            No Data
                        </td>
                    </tr>
                </tbody>

            </table>
        </div>
    </div>

    @*End<--Section for selection and display of required products with required quantity-->End*@




    @*Start<--Section for order summary with user-data insertion -->Start*@

    <div style="padding-top:12vh;">

        <div style="padding:3%;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;border-radius:12px;">
            <h1>Order Summary</h1>
            <h5 style="margin-top:6%;margin-bottom:3%"><i>Orders</i></h5>
            <table class="table" id="table_id">
                <thead>
                    <tr>
                        <th>
                            ProductId
                        </th>
                        <th>
                            OrderId
                        </th>
                        <th>
                            Product Name
                        </th>
                        <th>
                            Quantity
                        </th>
                        <th>
                            Price
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>

            </table>
            <div style="margin-top:6vh">
                <h5 style="margin-bottom:3%"> <i>Order Details</i></h5>
                <div class="form-group" style="padding-bottom:1%;margin-top:2vh">
                    User Name:
                    <label class="sr-only" for="" style="padding-bottom:0.5%">User Name</label>
                    <input type="text" class="form-control" id="userName" value="" readonly placeholder="Username">
                </div>
                <div class="form-group" style="padding-bottom:1%">
                    Logged Admin Id:
                    <label class="sr-only" for="" style="padding-bottom:0.5%">Logged Admin Id:</label>
                    <input type="text" class="form-control" id="loggedId" value="@ViewBag.LoggedUserId" readonly>
                </div>
                <div class="form-group">
                    Total Amount:
                    <label class="sr-only" for="" style="padding-bottom:0.5%">Total Amount:</label>
                    <input type="text" class="form-control" id="total_amount" value="0" readonly>
                </div>
                <div style="margin-top:2%">
                    <button type="submit" class="btn btn-primary flex-column" id="paymentProceed" style="margin-right:1.5%">Proceed for Payment</button>
                    <button type="button" class="btn btn-danger flex-column" id="discard">Discard</button>
                </div>

            </div>
        </div>
    </div>
</div>


@*End<--Section for order summary with user-data insertion -->End*@


@*Start<--CSS Styles-->Start*@


@section Styles{
     <style>
        ::-webkit-scrollbar {
            display: none;
        }
     </style>
    }



    @*End<--CSS Styles-->End*@



    @*Start<--Js Scripts -->Start*@

    @section scripts{


     <script>


        $(document).ready(function() {
            var data = [];
            var currentObject = {};
            var totalAmount = 0;
            var customerAddress = "";

            //Start<-Function to handle the selection of different products from the list->Start

            $('.selectProductName').on('change', function() {
                var obj = @Json.Serialize(@ViewBag.Products);

                for (var index in obj) {

                    if (obj[index].productName == $(this).val()) {

                        currentObject = obj[index];
                        $('#productNameData').html(currentObject.productName);
                        $('#productUnit').html(currentObject.unit);
                        $('#productPrice').html(currentObject.sellingUnitPrice);
                        $('#productAvaliable').html(currentObject.avaliable);
                        var element1 = '<div class="input-group number-spinner" >' +
                            '<span class="input-group-btn">' +
                            '<button class="btn btn-default form-control" style="border:1px solid gray;height:100%;" data-dir="down">-</button>' +
                            '</span>' +
                            '<input type="text" class="form-control text-center" style="max-width:10vw" value="0" id="productQuantity">' +
                            '<span class="input-group-btn">' +
                            '<button class="btn btn-default form-control" style="border:1px solid gray;height:100%;" data-dir="up">+</button>' +
                            '</span></div>'
                        $('#productFinalQuantity').html(element1);
                        var element2 = '<input type="text" value="0" class="form-control" id="productFinalPrice"/>'
                        $('#productTotalPrice').html(element2);
                        var element3 = '<a  class="btn btn-primary" id="Add_item"  >Add</a> ';
                        $('#productAction').html(element3)
                    }
                }

            })

            //End<-Function to handle the selection of different products from the list->End


            //Start<-Function to handle the selection of required quantity of product->Start

            $(document).on('click', '.number-spinner button', function() {
                var btn = $(this),
                    oldValue = btn.closest('.number-spinner').find('input').val().trim(),
                    newVal = 0;
                amountVal = 0;
                var spinId, amount;

                if (btn.attr('data-dir') == 'up') {
                    newVal = parseInt(oldValue) + 1;
                } else {
                    if (oldValue > 0) {
                        newVal = parseInt(oldValue) - 1;
                    } else {
                        newVal = 0;
                    }
                }
                var amount = $('#productPrice').html()
                amountVal = newVal * parseInt(amount);
                btn.closest('.number-spinner').find('input').val(newVal);
                $("#productFinalPrice").val(amountVal);
            });



            //End<-Function to handle the selection of required quantity of product->End

            //Datatable initialization

            $('#table_id').DataTable({
                "processing": true,
                "serverSide": false,
                "filter": true,
                "columnDefs": [{
                    "targets": [0, 1],
                    "visible": false,
                    "searchable": false
                }],
            });

            //Start<-Function to handle the product addition to the final list(order summary table)->Start

            $(document).on('click', '#Add_item', function() {
                var btn = $(this),
                    tmpObject = {};

                if (parseInt($("#productAvaliable").html()) < parseInt($("#productQuantity").val())) {
                    alert("Selected Quantity not available.");
                    $("#productQuantity").val("0");
                    $('#productFinalPrice').val("0");
                }
                else if ($("#productFinalPrice").val() != "0") {




                    tmpObject.ProductId = parseInt(currentObject.productId);
                    tmpObject.Qty = parseInt($('.number-spinner button').closest('.number-spinner').find('input').val().trim());
                    tmpObject.Price = parseFloat($("#productFinalPrice").val());
                    tmpObject.ProductName = currentObject.productName;
                    tmpObject.UnitPrice = parseFloat(currentObject.sellingUnitPrice);
                    //tmpObject.OrderDate = dateTime;
                    tmpObject.OrderId = Math.floor(Date.now() / 1000);
                    data.push(tmpObject);
                    //Adding row to datatable
                    var t = $('#table_id').DataTable();
                    t.row.add([tmpObject.ProductId, tmpObject.OrderId, tmpObject.ProductName, tmpObject.Qty, tmpObject.Price, '<a  class="btn btn-danger Remove_item"  data-dir="' + tmpObject.OrderId + '" >Remove</a>']).draw(false);
                    totalAmount = totalAmount + parseInt(tmpObject.Price);
                    $("#total_amount").val(totalAmount);


                    $('#productNameData').html('No Data');
                    $('#productUnit').html('No Data');
                    $('#productPrice').html('No Data');
                    $('#productAvaliable').html('No Data');
                    $('#productQuantity').html('No Data');
                    $('#productTotalPrice').html('No Data');
                    $('#productAction').html('No Data');
                    $('#productName').val('default');

                    $("html, body").animate({ scrollTop: $(document).height() }, "slow");

                }
            });


            //End<-Function to handle the product addition to the final list(order summary table)->End



            //Start<-Function to handle the product addition to the final list(order summary table)->Start

            $(document).on('click', '.Remove_item', function() {
                var myTable = $('#table_id').DataTable();
                var _id = $(this).attr("data-dir");
                for (let x = 0; x < data.length; x++) {
                    if (data[x].OrderId == _id) {
                        data.splice(x, 1);
                        break;
                    }
                }
                var data1 = myTable.rows().data();
                data1.each(function(value, index) {
                    if (value['1'] == _id) {
                        myTable.row(index).remove().draw(false);
                        totalAmount = totalAmount - parseInt(value['4']);
                        $("#total_amount").val(totalAmount);
                    }
                });

            });

            //End<-Function to handle the product addition to the final list(order summary table)->End



            //Start<-Function to find the user details->Start

            $("#findUser").on("click", function() {
                var tempObj = {
                    mobileNumber: $("#usrnm").val()
                }
                $.ajax({
                    url: '@Url.Action("FindCustomer","Customer")',
                    type: "post",
                    data: tempObj,
                    dataType: "json",
                    success: function(finaldata) {
                        if (finaldata["data"].length < 1) {
                            alert('No User found, Please Create new User!');
                            $("#userName").val("");
                        } else {
                            $("#userName").val(finaldata["data"][0].customerName);
                            customerAddress = finaldata["data"][0].address;
                            console.log(finaldata)
                            alert('User exists');
                        }
                    }
                });
            })


            //End<-Function to find the user details->End


            //Start<-Function to add new user->Start

            $('#createUser').click(function() {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Create","Customer")',
                    dataType: 'html',
                    success: function(data1) {
                        $("#myModalContent").html(data1);
                        $('#myModal').modal('show');
                    },
                    error: function() {
                        alert('error');
                    }
                });
            });
            $('.modal-close').click(function() {
                $.ajax({
                    type: 'get',
                    success: function(data) {
                        $('#myModal').modal('hide');
                    },
                    error: function() {
                        alert('error');
                    }
                });
            });



            //End<-Function to add new user->End

            //Start<-Function to handle the final data submission->Start

            $("#paymentProceed").on("click", function() {
                if (($("#usrnm").val() == null || $("#usrnm").val() == "" || $("#userName").val() == null || $("#userName").val() == "" || $("#total_amount").val() == 0)) {
                    alert('Please provide all required data!')

                } else {
                    var itms = '';

                    var today = new Date();

                    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();

                    var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();

                    var dateTime = date + ' ' + time;

                    var orderDetailsId;

                    var products = @Json.Serialize(@ViewBag.Products);

                    var jData = {
                        OrderDate: dateTime,
                        UserIdMobile: $('#usrnm').val(),
                        TotalAmount: $("#total_amount").val(),
                        Address: customerAddress,
                        AdminId: $("#loggedId").val()
                    }
                    $.ajax({
                        url: '@Url.Action("SaveAndGet","Order")',
                        type: "post",
                        data: jData,
                        dataType: "json",
                        success: function(successdata) {
                            for (var i = 0; i < data.length; i++) {

                                var tempData = {
                                    OrderId: data[i].OrderId,
                                    OrderDetailId: successdata,
                                    ProductName: data[i].ProductName,
                                    ProductId: data[i].ProductId,
                                    Qty: data[i].Qty,
                                    Price: data[i].Price,
                                    UnitPrice: data[i].UnitPrice
                                }

                                $.ajax({
                                    url: '@Url.Action("OrderSubmit","Order")',
                                    type: "post",
                                    data: tempData,
                                    dataType: "json",
                                    success: function(finaldata) {
                                    }
                                });

                                var requiredProductDetails = {};
                                for (let j = 0; j < products.length; j++) {
                                    if (products[j].productId == parseInt(data[i].ProductId)) {

                                        requiredProductDetails.ProductId = products[j].productId
                                        requiredProductDetails.ProductName = products[j].productName
                                        requiredProductDetails.ProductType = products[j].productType
                                        requiredProductDetails.Unit = products[j].unit
                                        requiredProductDetails.PurchaseUnitPrice = products[j].purchaseUnitPrice
                                        requiredProductDetails.SellingUnitPrice = products[j].sellingUnitPrice
                                        requiredProductDetails.Avaliable = products[j].avaliable - parseInt(data[i].Qty)
                                    }
                                }
                                $.ajax({
                                    url: '@Url.Action("ProductUpdate","Product")',
                                    type: "post",
                                    data: requiredProductDetails,
                                    dataType: "string",
                                    success: function(finaldata) {

                                    }
                                });
                            }
                        }
                    });
                    alert("Order Submitted Successfully");
                    history.go(0);
                    window.location.href = '/OrderMerge/Index';
                }

            })

            //End<-Function to handle the final data submission->End

            $('#discard').on('click', function() {

                alert("All Details are discarded");
                window.location.href = '/Order/Index';
            })

            //Css alteration using jqery

            //$("#table_id_previous").addClass("btn btn-primary");

            //Selectjs initialization

            $('.selectProductType').select2();
            $('.selectProductName').select2();
        });

     </script>

     <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
     <script src="~/lib/datatables/js/dataTables.bootstrap4.js"></script>

}

    @*End<--Js Scripts -->End*@

